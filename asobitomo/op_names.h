//
//  op_names.h
//  asobitomo
//
//  Created by jogloran-s on 20.2.18.
//  Copyright Â© 2018 Overpunch. All rights reserved.
//

#pragma once

#include <array>
#include <string>

std::array<std::string, 256> op_names {
"NOP" /* 0x0 */,
"LD BC, u16" /* 0x1 */,
"LD (BC), A" /* 0x2 */,
"INC BC" /* 0x3 */,
"INC B" /* 0x4 */,
"DEC B" /* 0x5 */,
"LD B, u8" /* 0x6 */,
"RLCA" /* 0x7 */,
"LD (word), SP" /* 0x8 */,
"ADD HL, BC" /* 0x9 */,
"LD A, (BC)" /* 0xa */,
"DEC BC" /* 0xb */,
"INC C" /* 0xc */,
"DEC C" /* 0xd */,
"LD C, u8" /* 0xe */,
"RRCA" /* 0xf */,
"STOP" /* 0x10 */,
"LD DE, u16" /* 0x11 */,
"LD (DE), A" /* 0x12 */,
"INC DE" /* 0x13 */,
"INC D" /* 0x14 */,
"DEC D" /* 0x15 */,
"LD D, u8" /* 0x16 */,
"RLA" /* 0x17 */,
"JR s" /* 0x18 */,
"ADD HL, DE" /* 0x19 */,
"LD A, (DE)" /* 0x1a */,
"DEC DE" /* 0x1b */,
"INC E" /* 0x1c */,
"DEC E" /* 0x1d */,
"LD E, u8" /* 0x1e */,
"RRA" /* 0x1f */,
"JR NZ, i8" /* 0x20 */,
"LD HL, u16" /* 0x21 */,
"LD (HL+), A" /* 0x22 */,
"INC HL" /* 0x23 */,
"INC H" /* 0x24 */,
"DEC H" /* 0x25 */,
"LD H, u8" /* 0x26 */,
"DAA" /* 0x27 */,
"JR Z, i8" /* 0x28 */,
"ADD HL, HL" /* 0x29 */,
"LD A, (HL+)" /* 0x2a */,
"DEC HL" /* 0x2b */,
"INC L" /* 0x2c */,
"DEC L" /* 0x2d */,
"LD L, u8" /* 0x2e */,
"CPL" /* 0x2f */,
"JR NC, i8" /* 0x30 */,
"LD SP, u16" /* 0x31 */,
"LD (HL-), A" /* 0x32 */,
"INC SP" /* 0x33 */,
"INC (HL)" /* 0x34 */,
"DEC (HL)" /* 0x35 */,
"LD (HL), u8" /* 0x36 */,
"SCF" /* 0x37 */,
"JR C, i8" /* 0x38 */,
"ADD HL, SP" /* 0x39 */,
"LD A, (HL-)" /* 0x3a */,
"DEC SP" /* 0x3b */,
"INC A" /* 0x3c */,
"DEC A" /* 0x3d */,
"LD A, u8" /* 0x3e */,
"CCF" /* 0x3f */,
"LD B, B" /* 0x40 */,
"LD B, C" /* 0x41 */,
"LD B, D" /* 0x42 */,
"LD B, E" /* 0x43 */,
"LD B, H" /* 0x44 */,
"LD B, L" /* 0x45 */,
"LD B, (HL)" /* 0x46 */,
"LD B, A" /* 0x47 */,
"LD C, B" /* 0x48 */,
"LD C, C" /* 0x49 */,
"LD C, D" /* 0x4a */,
"LD C, E" /* 0x4b */,
"LD C, H" /* 0x4c */,
"LD C, L" /* 0x4d */,
"LD C, (HL)" /* 0x4e */,
"LD C, A" /* 0x4f */,
"LD D, B" /* 0x50 */,
"LD D, C" /* 0x51 */,
"LD D, D" /* 0x52 */,
"LD D, E" /* 0x53 */,
"LD D, H" /* 0x54 */,
"LD D, L" /* 0x55 */,
"LD D, (HL)" /* 0x56 */,
"LD D, A" /* 0x57 */,
"LD E, B" /* 0x58 */,
"LD E, C" /* 0x59 */,
"LD E, D" /* 0x5a */,
"LD E, E" /* 0x5b */,
"LD E, H" /* 0x5c */,
"LD E, L" /* 0x5d */,
"LD E, (HL)" /* 0x5e */,
"LD E, A" /* 0x5f */,
"LD H, B" /* 0x60 */,
"LD H, C" /* 0x61 */,
"LD H, D" /* 0x62 */,
"LD H, E" /* 0x63 */,
"LD H, H" /* 0x64 */,
"LD H, L" /* 0x65 */,
"LD H, (HL)" /* 0x66 */,
"LD H, A" /* 0x67 */,
"LD L, B" /* 0x68 */,
"LD L, C" /* 0x69 */,
"LD L, D" /* 0x6a */,
"LD L, E" /* 0x6b */,
"LD L, H" /* 0x6c */,
"LD L, L" /* 0x6d */,
"LD L, (HL)" /* 0x6e */,
"LD L, A" /* 0x6f */,
"LD (HL), B" /* 0x70 */,
"LD (HL), C" /* 0x71 */,
"LD (HL), D" /* 0x72 */,
"LD (HL), E" /* 0x73 */,
"LD (HL), H" /* 0x74 */,
"LD (HL), L" /* 0x75 */,
"HALT" /* 0x76 */,
"LD (HL), A" /* 0x77 */,
"LD A, B" /* 0x78 */,
"LD A, C" /* 0x79 */,
"LD A, D" /* 0x7a */,
"LD A, E" /* 0x7b */,
"LD A, H" /* 0x7c */,
"LD A, L" /* 0x7d */,
"LD A, (HL)" /* 0x7e */,
"LD A, A" /* 0x7f */,
"ADD B" /* 0x80 */,
"ADD C" /* 0x81 */,
"ADD D" /* 0x82 */,
"ADD E" /* 0x83 */,
"ADD H" /* 0x84 */,
"ADD L" /* 0x85 */,
"ADD (HL)" /* 0x86 */,
"ADD A" /* 0x87 */,
"ADC B" /* 0x88 */,
"ADC C" /* 0x89 */,
"ADC D" /* 0x8a */,
"ADC E" /* 0x8b */,
"ADC H" /* 0x8c */,
"ADC L" /* 0x8d */,
"ADC (HL)" /* 0x8e */,
"ADC A" /* 0x8f */,
"SUB B" /* 0x90 */,
"SUB C" /* 0x91 */,
"SUB D" /* 0x92 */,
"SUB E" /* 0x93 */,
"SUB H" /* 0x94 */,
"SUB L" /* 0x95 */,
"SUB (HL)" /* 0x96 */,
"SUB A" /* 0x97 */,
"SBC B" /* 0x98 */,
"SBC C" /* 0x99 */,
"SBC D" /* 0x9a */,
"SBC E" /* 0x9b */,
"SBC H" /* 0x9c */,
"SBC L" /* 0x9d */,
"SBC (HL)" /* 0x9e */,
"SBC A" /* 0x9f */,
"AND B" /* 0xa0 */,
"AND C" /* 0xa1 */,
"AND D" /* 0xa2 */,
"AND E" /* 0xa3 */,
"AND H" /* 0xa4 */,
"AND L" /* 0xa5 */,
"AND (HL)" /* 0xa6 */,
"AND A" /* 0xa7 */,
"XOR B" /* 0xa8 */,
"XOR C" /* 0xa9 */,
"XOR D" /* 0xaa */,
"XOR E" /* 0xab */,
"XOR H" /* 0xac */,
"XOR L" /* 0xad */,
"XOR (HL)" /* 0xae */,
"XOR A" /* 0xaf */,
"OR B" /* 0xb0 */,
"OR C" /* 0xb1 */,
"OR D" /* 0xb2 */,
"OR E" /* 0xb3 */,
"OR H" /* 0xb4 */,
"OR L" /* 0xb5 */,
"OR (HL)" /* 0xb6 */,
"OR A" /* 0xb7 */,
"CP B" /* 0xb8 */,
"CP C" /* 0xb9 */,
"CP D" /* 0xba */,
"CP E" /* 0xbb */,
"CP H" /* 0xbc */,
"CP L" /* 0xbd */,
"CP (HL)" /* 0xbe */,
"CP A" /* 0xbf */,
"RET NZ" /* 0xc0 */,
"POP BC" /* 0xc1 */,
"JP NZ, u16" /* 0xc2 */,
"JP u16" /* 0xc3 */,
"CALL NZ, u16" /* 0xc4 */,
"PUSH BC" /* 0xc5 */,
"ADD u8" /* 0xc6 */,
"RST $0" /* 0xc7 */,
"RET Z" /* 0xc8 */,
"RET" /* 0xc9 */,
"JP Z, u16" /* 0xca */,
"CB" /* 0xcb */,
"CALL Z, word" /* 0xcc */,
"CALL word" /* 0xcd */,
"ADC u8" /* 0xce */,
"RST $8" /* 0xcf */,
"RET NC" /* 0xd0 */,
"POP DE" /* 0xd1 */,
"JP NC, word" /* 0xd2 */,
"(invalid)" /* 0xd3 */,
"CALL NC, word" /* 0xd4 */,
"PUSH DE" /* 0xd5 */,
"SUB u8" /* 0xd6 */,
"RST $10" /* 0xd7 */,
"RET C" /* 0xd8 */,
"RETI" /* 0xd9 */,
"JP C, word" /* 0xda */,
"(invalid)" /* 0xdb */,
"CALL C, word" /* 0xdc */,
"(invalid)" /* 0xdd */,
"SBC u8" /* 0xde */,
"RST $18" /* 0xdf */,
"LD ($FF00+u8), A" /* 0xe0 */,
"POP HL" /* 0xe1 */,
"LD ($FF00+C), A" /* 0xe2 */,
"(invalid)" /* 0xe3 */,
"(invalid)" /* 0xe4 */,
"PUSH HL" /* 0xe5 */,
"AND u8" /* 0xe6 */,
"RST $20" /* 0xe7 */,
"ADD SP, s" /* 0xe8 */,
"JP HL" /* 0xe9 */,
"LD (word), A" /* 0xea */,
"(invalid)" /* 0xeb */,
"(invalid)" /* 0xec */,
"(invalid)" /* 0xed */,
"XOR u8" /* 0xee */,
"RST $28" /* 0xef */,
"LD A, ($FF00+u8)" /* 0xf0 */,
"POP AF" /* 0xf1 */,
"LD A, ($FF00+C)" /* 0xf2 */,
"DI" /* 0xf3 */,
"(invalid)" /* 0xf4 */,
"PUSH AF" /* 0xf5 */,
"OR u8" /* 0xf6 */,
"RST $30" /* 0xf7 */,
"LD HL, SP+s" /* 0xf8 */,
"LD SP, HL" /* 0xf9 */,
"LD A, (word)" /* 0xfa */,
"EI" /* 0xfb */,
"(invalid)" /* 0xfc */,
"(invalid)" /* 0xfd */,
"CP u8" /* 0xfe */,
"RST $38" /* 0xff */,
};

std::array<std::string, 256> cb_op_names {
"RLC B" /* 0xcb00 */,
"RLC C" /* 0xcb01 */,
"RLC D" /* 0xcb02 */,
"RLC E" /* 0xcb03 */,
"RLC H" /* 0xcb04 */,
"RLC L" /* 0xcb05 */,
"RLC (HL)" /* 0xcb06 */,
"RLC A" /* 0xcb07 */,
"RRC B" /* 0xcb08 */,
"RRC C" /* 0xcb09 */,
"RRC D" /* 0xcb0a */,
"RRC E" /* 0xcb0b */,
"RRC H" /* 0xcb0c */,
"RRC L" /* 0xcb0d */,
"RRC (HL)" /* 0xcb0e */,
"RRC A" /* 0xcb0f */,
"RL B" /* 0xcb10 */,
"RL C" /* 0xcb11 */,
"RL D" /* 0xcb12 */,
"RL E" /* 0xcb13 */,
"RL H" /* 0xcb14 */,
"RL L" /* 0xcb15 */,
"RL (HL)" /* 0xcb16 */,
"RL A" /* 0xcb17 */,
"RR B" /* 0xcb18 */,
"RR C" /* 0xcb19 */,
"RR D" /* 0xcb1a */,
"RR E" /* 0xcb1b */,
"RR H" /* 0xcb1c */,
"RR L" /* 0xcb1d */,
"RR (HL)" /* 0xcb1e */,
"RR A" /* 0xcb1f */,
"SLA B" /* 0xcb20 */,
"SLA C" /* 0xcb21 */,
"SLA D" /* 0xcb22 */,
"SLA E" /* 0xcb23 */,
"SLA H" /* 0xcb24 */,
"SLA L" /* 0xcb25 */,
"SLA (HL)" /* 0xcb26 */,
"SLA A" /* 0xcb27 */,
"SRA B" /* 0xcb28 */,
"SRA C" /* 0xcb29 */,
"SRA D" /* 0xcb2a */,
"SRA E" /* 0xcb2b */,
"SRA H" /* 0xcb2c */,
"SRA L" /* 0xcb2d */,
"SRA (HL)" /* 0xcb2e */,
"SRA A" /* 0xcb2f */,
"SWAP B" /* 0xcb30 */,
"SWAP C" /* 0xcb31 */,
"SWAP D" /* 0xcb32 */,
"SWAP E" /* 0xcb33 */,
"SWAP H" /* 0xcb34 */,
"SWAP L" /* 0xcb35 */,
"SWAP (HL)" /* 0xcb36 */,
"SWAP A" /* 0xcb37 */,
"SRL B" /* 0xcb38 */,
"SRL C" /* 0xcb39 */,
"SRL D" /* 0xcb3a */,
"SRL E" /* 0xcb3b */,
"SRL H" /* 0xcb3c */,
"SRL L" /* 0xcb3d */,
"SRL (HL)" /* 0xcb3e */,
"SRL A" /* 0xcb3f */,
"BIT 0, B" /* 0xcb40 */,
"BIT 0, C" /* 0xcb41 */,
"BIT 0, D" /* 0xcb42 */,
"BIT 0, E" /* 0xcb43 */,
"BIT 0, H" /* 0xcb44 */,
"BIT 0, L" /* 0xcb45 */,
"BIT 0, (HL)" /* 0xcb46 */,
"BIT 0, A" /* 0xcb47 */,
"BIT 1, B" /* 0xcb48 */,
"BIT 1, C" /* 0xcb49 */,
"BIT 1, D" /* 0xcb4a */,
"BIT 1, E" /* 0xcb4b */,
"BIT 1, H" /* 0xcb4c */,
"BIT 1, L" /* 0xcb4d */,
"BIT 1, (HL)" /* 0xcb4e */,
"BIT 1, A" /* 0xcb4f */,
"BIT 2, B" /* 0xcb50 */,
"BIT 2, C" /* 0xcb51 */,
"BIT 2, D" /* 0xcb52 */,
"BIT 2, E" /* 0xcb53 */,
"BIT 2, H" /* 0xcb54 */,
"BIT 2, L" /* 0xcb55 */,
"BIT 2, (HL)" /* 0xcb56 */,
"BIT 2, A" /* 0xcb57 */,
"BIT 3, B" /* 0xcb58 */,
"BIT 3, C" /* 0xcb59 */,
"BIT 3, D" /* 0xcb5a */,
"BIT 3, E" /* 0xcb5b */,
"BIT 3, H" /* 0xcb5c */,
"BIT 3, L" /* 0xcb5d */,
"BIT 3, (HL)" /* 0xcb5e */,
"BIT 3, A" /* 0xcb5f */,
"BIT 4, B" /* 0xcb60 */,
"BIT 4, C" /* 0xcb61 */,
"BIT 4, D" /* 0xcb62 */,
"BIT 4, E" /* 0xcb63 */,
"BIT 4, H" /* 0xcb64 */,
"BIT 4, L" /* 0xcb65 */,
"BIT 4, (HL)" /* 0xcb66 */,
"BIT 4, A" /* 0xcb67 */,
"BIT 5, B" /* 0xcb68 */,
"BIT 5, C" /* 0xcb69 */,
"BIT 5, D" /* 0xcb6a */,
"BIT 5, E" /* 0xcb6b */,
"BIT 5, H" /* 0xcb6c */,
"BIT 5, L" /* 0xcb6d */,
"BIT 5, (HL)" /* 0xcb6e */,
"BIT 5, A" /* 0xcb6f */,
"BIT 6, B" /* 0xcb70 */,
"BIT 6, C" /* 0xcb71 */,
"BIT 6, D" /* 0xcb72 */,
"BIT 6, E" /* 0xcb73 */,
"BIT 6, H" /* 0xcb74 */,
"BIT 6, L" /* 0xcb75 */,
"BIT 6, (HL)" /* 0xcb76 */,
"BIT 6, A" /* 0xcb77 */,
"BIT 7, B" /* 0xcb78 */,
"BIT 7, C" /* 0xcb79 */,
"BIT 7, D" /* 0xcb7a */,
"BIT 7, E" /* 0xcb7b */,
"BIT 7, H" /* 0xcb7c */,
"BIT 7, L" /* 0xcb7d */,
"BIT 7, (HL)" /* 0xcb7e */,
"BIT 7, A" /* 0xcb7f */,
"RES 0, B" /* 0xcb80 */,
"RES 0, C" /* 0xcb81 */,
"RES 0, D" /* 0xcb82 */,
"RES 0, E" /* 0xcb83 */,
"RES 0, H" /* 0xcb84 */,
"RES 0, L" /* 0xcb85 */,
"RES 0, (HL)" /* 0xcb86 */,
"RES 0, A" /* 0xcb87 */,
"RES 1, B" /* 0xcb88 */,
"RES 1, C" /* 0xcb89 */,
"RES 1, D" /* 0xcb8a */,
"RES 1, E" /* 0xcb8b */,
"RES 1, H" /* 0xcb8c */,
"RES 1, L" /* 0xcb8d */,
"RES 1, (HL)" /* 0xcb8e */,
"RES 1, A" /* 0xcb8f */,
"RES 2, B" /* 0xcb90 */,
"RES 2, C" /* 0xcb91 */,
"RES 2, D" /* 0xcb92 */,
"RES 2, E" /* 0xcb93 */,
"RES 2, H" /* 0xcb94 */,
"RES 2, L" /* 0xcb95 */,
"RES 2, (HL)" /* 0xcb96 */,
"RES 2, A" /* 0xcb97 */,
"RES 3, B" /* 0xcb98 */,
"RES 3, C" /* 0xcb99 */,
"RES 3, D" /* 0xcb9a */,
"RES 3, E" /* 0xcb9b */,
"RES 3, H" /* 0xcb9c */,
"RES 3, L" /* 0xcb9d */,
"RES 3, (HL)" /* 0xcb9e */,
"RES 3, A" /* 0xcb9f */,
"RES 4, B" /* 0xcba0 */,
"RES 4, C" /* 0xcba1 */,
"RES 4, D" /* 0xcba2 */,
"RES 4, E" /* 0xcba3 */,
"RES 4, H" /* 0xcba4 */,
"RES 4, L" /* 0xcba5 */,
"RES 4, (HL)" /* 0xcba6 */,
"RES 4, A" /* 0xcba7 */,
"RES 5, B" /* 0xcba8 */,
"RES 5, C" /* 0xcba9 */,
"RES 5, D" /* 0xcbaa */,
"RES 5, E" /* 0xcbab */,
"RES 5, H" /* 0xcbac */,
"RES 5, L" /* 0xcbad */,
"RES 5, (HL)" /* 0xcbae */,
"RES 5, A" /* 0xcbaf */,
"RES 6, B" /* 0xcbb0 */,
"RES 6, C" /* 0xcbb1 */,
"RES 6, D" /* 0xcbb2 */,
"RES 6, E" /* 0xcbb3 */,
"RES 6, H" /* 0xcbb4 */,
"RES 6, L" /* 0xcbb5 */,
"RES 6, (HL)" /* 0xcbb6 */,
"RES 6, A" /* 0xcbb7 */,
"RES 7, B" /* 0xcbb8 */,
"RES 7, C" /* 0xcbb9 */,
"RES 7, D" /* 0xcbba */,
"RES 7, E" /* 0xcbbb */,
"RES 7, H" /* 0xcbbc */,
"RES 7, L" /* 0xcbbd */,
"RES 7, (HL)" /* 0xcbbe */,
"RES 7, A" /* 0xcbbf */,
"SET 0, B" /* 0xcbc0 */,
"SET 0, C" /* 0xcbc1 */,
"SET 0, D" /* 0xcbc2 */,
"SET 0, E" /* 0xcbc3 */,
"SET 0, H" /* 0xcbc4 */,
"SET 0, L" /* 0xcbc5 */,
"SET 0, (HL)" /* 0xcbc6 */,
"SET 0, A" /* 0xcbc7 */,
"SET 1, B" /* 0xcbc8 */,
"SET 1, C" /* 0xcbc9 */,
"SET 1, D" /* 0xcbca */,
"SET 1, E" /* 0xcbcb */,
"SET 1, H" /* 0xcbcc */,
"SET 1, L" /* 0xcbcd */,
"SET 1, (HL)" /* 0xcbce */,
"SET 1, A" /* 0xcbcf */,
"SET 2, B" /* 0xcbd0 */,
"SET 2, C" /* 0xcbd1 */,
"SET 2, D" /* 0xcbd2 */,
"SET 2, E" /* 0xcbd3 */,
"SET 2, H" /* 0xcbd4 */,
"SET 2, L" /* 0xcbd5 */,
"SET 2, (HL)" /* 0xcbd6 */,
"SET 2, A" /* 0xcbd7 */,
"SET 3, B" /* 0xcbd8 */,
"SET 3, C" /* 0xcbd9 */,
"SET 3, D" /* 0xcbda */,
"SET 3, E" /* 0xcbdb */,
"SET 3, H" /* 0xcbdc */,
"SET 3, L" /* 0xcbdd */,
"SET 3, (HL)" /* 0xcbde */,
"SET 3, A" /* 0xcbdf */,
"SET 4, B" /* 0xcbe0 */,
"SET 4, C" /* 0xcbe1 */,
"SET 4, D" /* 0xcbe2 */,
"SET 4, E" /* 0xcbe3 */,
"SET 4, H" /* 0xcbe4 */,
"SET 4, L" /* 0xcbe5 */,
"SET 4, (HL)" /* 0xcbe6 */,
"SET 4, A" /* 0xcbe7 */,
"SET 5, B" /* 0xcbe8 */,
"SET 5, C" /* 0xcbe9 */,
"SET 5, D" /* 0xcbea */,
"SET 5, E" /* 0xcbeb */,
"SET 5, H" /* 0xcbec */,
"SET 5, L" /* 0xcbed */,
"SET 5, (HL)" /* 0xcbee */,
"SET 5, A" /* 0xcbef */,
"SET 6, B" /* 0xcbf0 */,
"SET 6, C" /* 0xcbf1 */,
"SET 6, D" /* 0xcbf2 */,
"SET 6, E" /* 0xcbf3 */,
"SET 6, H" /* 0xcbf4 */,
"SET 6, L" /* 0xcbf5 */,
"SET 6, (HL)" /* 0xcbf6 */,
"SET 6, A" /* 0xcbf7 */,
"SET 7, B" /* 0xcbf8 */,
"SET 7, C" /* 0xcbf9 */,
"SET 7, D" /* 0xcbfa */,
"SET 7, E" /* 0xcbfb */,
"SET 7, H" /* 0xcbfc */,
"SET 7, L" /* 0xcbfd */,
"SET 7, (HL)" /* 0xcbfe */,
"SET 7, A" /* 0xcbff */,
};
